{"version":3,"sources":["../../src/react/AuthenticatedPageRoute.jsx"],"names":["React","useContext","Route","AppContext","LoginRedirect","PageRoute","AuthenticatedPageRoute","props","authenticatedUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;;;;;;;;;;;;;;AAaA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,oBACtBN,UAAU,CAACE,UAAD,CADY;AAAA,MAC5CK,iBAD4C,eAC5CA,iBAD4C,EAGpD;AACA;;;AACA,MAAIA,iBAAiB,KAAK,IAA1B,EAAgC;AAC9B,wBAAO,oBAAC,KAAD,eAAWD,KAAX;AAAkB,MAAA,SAAS,EAAEH;AAA7B,OAAP;AACD;;AACD,sBACE,oBAAC,SAAD,EAAeG,KAAf,CADF;AAGD","sourcesContent":["import React, { useContext } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport AppContext from './AppContext';\nimport LoginRedirect from './LoginRedirect';\nimport PageRoute from './PageRoute';\n\n/**\n * A react-router route that redirects to the login page when the route becomes active and the user\n * is not authenticated.  If the application has been initialized with `requireAuthenticatedUser`\n * false, an authenticatedPageRoute can be used to protect a subset of the application's routes,\n * rather than the entire application.\n *\n * Like a `PageRoute`, also calls `sendPageEvent` when the route becomes active.\n *\n * @see PageRoute\n * @see {@link module:frontend-platform/analytics~sendPageEvent}\n * @memberof module:React\n * @param {Object} props\n */\nexport default function AuthenticatedPageRoute(props) {\n  const { authenticatedUser } = useContext(AppContext);\n\n  // We need to let Route \"render\" the redirect - if we did it here in AuthenticatedRoute, it'd\n  // execute immediately, rather than when the router determines the route should become active.\n  if (authenticatedUser === null) {\n    return <Route {...props} component={LoginRedirect} />;\n  }\n  return (\n    <PageRoute {...props} />\n  );\n}\n"],"file":"AuthenticatedPageRoute.js"}