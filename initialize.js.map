{"version":3,"file":"initialize.js","names":["createBrowserHistory","createMemoryHistory","publish","getConfig","mergeConfig","setConfig","configure","configureLogging","getLoggingService","NewRelicLoggingService","logError","configureAnalytics","SegmentAnalyticsService","identifyAnonymousUser","identifyAuthenticatedUser","getAuthenticatedHttpClient","configureAuth","ensureAuthenticatedUser","fetchAuthenticatedUser","hydrateAuthenticatedUser","getAuthenticatedUser","AxiosJwtAuthService","configureI18n","APP_PUBSUB_INITIALIZED","APP_CONFIG_INITIALIZED","APP_AUTH_INITIALIZED","APP_I18N_INITIALIZED","APP_LOGGING_INITIALIZED","APP_ANALYTICS_INITIALIZED","APP_READY","APP_INIT_ERROR","configureCache","parseUrlQueryParams","history","window","basename","PUBLIC_PATH","initError","error","auth","requireUser","hydrateUser","global","location","href","runtimeConfig","apiConfig","headers","accept","apiService","url","MFE_CONFIG_API_URL","name","value","slice","host","split","get","data","console","message","BASE_URL","analytics","authenticatedUser","userId","applyOverrideHandlers","overrides","noOp","pubSub","config","logging","i18n","ready","initialize","loggingService","analyticsService","authService","authMiddleware","requireAuthenticatedUser","messages","handlers","overrideHandlers","middleware","httpClient","isRedirecting"],"sources":["../src/initialize.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform**\n *\n * The initialization module provides a function for managing an application's initialization\n * lifecycle.  It also provides constants and default handler implementations.\n *\n * ```\n * import {\n *   initialize,\n *   APP_INIT_ERROR,\n *   APP_READY,\n *   subscribe,\n * } from '@edx/frontend-platform';\n * import { AppProvider, ErrorPage, PageRoute } from '@edx/frontend-platform/react';\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import { Switch } from 'react-router-dom';\n *\n * subscribe(APP_READY, () => {\n *   ReactDOM.render(\n *     <AppProvider store={configureStore()}>\n *       <Header />\n *       <main>\n *         <Switch>\n *           <PageRoute exact path=\"/\" component={PaymentPage} />\n *         </Switch>\n *       </main>\n *       <Footer />\n *     </AppProvider>,\n *     document.getElementById('root'),\n *   );\n * });\n *\n * subscribe(APP_INIT_ERROR, (error) => {\n *   ReactDOM.render(<ErrorPage message={error.message} />, document.getElementById('root'));\n * });\n *\n * initialize({\n *   messages: [appMessages],\n *   requireAuthenticatedUser: true,\n *   hydrateAuthenticatedUser: true,\n * });\n\n```\n * @module Initialization\n */\n\nimport { createBrowserHistory, createMemoryHistory } from 'history';\nimport {\n  publish,\n} from './pubSub';\n// eslint-disable-next-line import/no-cycle\nimport {\n  getConfig, mergeConfig, setConfig,\n} from './config';\nimport {\n  configure as configureLogging, getLoggingService, NewRelicLoggingService, logError,\n} from './logging';\nimport {\n  configure as configureAnalytics, SegmentAnalyticsService, identifyAnonymousUser, identifyAuthenticatedUser,\n} from './analytics';\nimport {\n  getAuthenticatedHttpClient,\n  configure as configureAuth,\n  ensureAuthenticatedUser,\n  fetchAuthenticatedUser,\n  hydrateAuthenticatedUser,\n  getAuthenticatedUser,\n  AxiosJwtAuthService,\n} from './auth';\nimport { configure as configureI18n } from './i18n';\nimport {\n  APP_PUBSUB_INITIALIZED,\n  APP_CONFIG_INITIALIZED,\n  APP_AUTH_INITIALIZED,\n  APP_I18N_INITIALIZED,\n  APP_LOGGING_INITIALIZED,\n  APP_ANALYTICS_INITIALIZED,\n  APP_READY, APP_INIT_ERROR,\n} from './constants';\nimport configureCache from './auth/LocalForageCache';\nimport { parseUrlQueryParams } from './utils';\n\n/**\n * A browser history or memory history object created by the [history](https://github.com/ReactTraining/history)\n * package.  Applications are encouraged to use this history object, rather than creating their own,\n * as behavior may be undefined when managing history via multiple mechanisms/instances. Note that\n * in environments where browser history may be inaccessible due to `window` being undefined, this\n * falls back to memory history.\n */\nexport const history = (typeof window !== 'undefined')\n  ? createBrowserHistory({\n    basename: getConfig().PUBLIC_PATH,\n  }) : createMemoryHistory();\n\n/**\n * The default handler for the initialization lifecycle's `initError` phase.  Logs the error to the\n * LoggingService using `logError`\n *\n * @see {@link module:frontend-platform/logging~logError}\n * @param {*} error\n */\nexport async function initError(error) {\n  logError(error);\n}\n\n/**\n * The default handler for the initialization lifecycle's `auth` phase.\n *\n * The handler has several responsibilities:\n * - Determining the user's authentication state (authenticated or anonymous)\n * - Optionally redirecting to login if the application requires an authenticated user.\n * - Optionally loading additional user information via the application's user account data\n * endpoint.\n *\n * @param {boolean} requireUser Whether or not we should redirect to login if a user is not\n * authenticated.\n * @param {boolean} hydrateUser Whether or not we should fetch additional user account data.\n */\nexport async function auth(requireUser, hydrateUser) {\n  if (requireUser) {\n    await ensureAuthenticatedUser(global.location.href);\n  } else {\n    await fetchAuthenticatedUser();\n  }\n\n  if (hydrateUser && getAuthenticatedUser() !== null) {\n    // We intentionally do not await the promise returned by hydrateAuthenticatedUser. All the\n    // critical data is returned as part of fetch/ensureAuthenticatedUser above, and anything else\n    // is a nice-to-have for application code.\n    hydrateAuthenticatedUser();\n  }\n}\n\n/*\n * Set or overrides configuration through an API.\n * This method allows runtime configuration.\n * Set a basic configuration when an error happen and allow initError and display the ErrorPage.\n */\n\nexport async function runtimeConfig() {\n  try {\n    const apiConfig = { headers: { accept: 'application/json' } };\n    const apiService = await configureCache();\n\n    const url = parseUrlQueryParams(getConfig().MFE_CONFIG_API_URL, [\n      { name: 'mfe', value: (getConfig().PUBLIC_PATH.slice(1, -1) || window.location.host.split('.')[0]) },\n    ]);\n\n    const { data } = await apiService.get(url, apiConfig);\n    mergeConfig(data);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error with config API', error.message);\n    setConfig({\n      BASE_URL: window.location.host,\n    });\n  }\n}\n/**\n * The default handler for the initialization lifecycle's `analytics` phase.\n *\n * The handler is responsible for identifying authenticated and anonymous users with the analytics\n * service.  This is a pre-requisite for sending analytics events, thus, we do it during the\n * initialization sequence so that analytics is ready once the application's UI code starts to load.\n *\n */\nexport async function analytics() {\n  const authenticatedUser = getAuthenticatedUser();\n  if (authenticatedUser && authenticatedUser.userId) {\n    identifyAuthenticatedUser(authenticatedUser.userId);\n  } else {\n    await identifyAnonymousUser();\n  }\n}\n\nfunction applyOverrideHandlers(overrides) {\n  const noOp = async () => { };\n  return {\n    pubSub: noOp,\n    config: noOp,\n    logging: noOp,\n    auth,\n    analytics,\n    i18n: noOp,\n    ready: noOp,\n    initError,\n    ...overrides, // This will override any same-keyed handlers from above.\n  };\n}\n\n/**\n * Invokes the application initialization sequence.\n *\n * The sequence proceeds through a number of lifecycle phases, during which pertinent services are\n * configured.\n *\n * Using the `handlers` option, lifecycle phase handlers can be overridden to perform custom\n * functionality.  Note that while these override handlers _do_ replace the default handler\n * functionality for analytics, auth, and initError (the other phases have no default\n * functionality), they do _not_ override the configuration of the actual services that those\n * handlers leverage.\n *\n * Some services can be overridden via the loggingService and analyticsService options.  The other\n * services (auth and i18n) cannot currently be overridden.\n *\n * The following lifecycle phases exist:\n *\n * - pubSub: A no-op by default.\n * - config: A no-op by default.\n * - logging: A no-op by default.\n * - auth: Uses the 'auth' handler defined above.\n * - analytics: Uses the 'analytics' handler defined above.\n * - i18n: A no-op by default.\n * - ready: A no-op by default.\n * - initError: Uses the 'initError' handler defined above.\n *\n * @param {Object} [options]\n * @param {*} [options.loggingService=NewRelicLoggingService] The `LoggingService` implementation\n * to use.\n * @param {*} [options.analyticsService=SegmentAnalyticsService] The `AnalyticsService`\n * implementation to use.\n * @param {*} [options.authMiddleware=[]] An array of middleware to apply to http clients in the auth service.\n * @param {*} [options.requireAuthenticatedUser=false] If true, turns on automatic login\n * redirection for unauthenticated users.  Defaults to false, meaning that by default the\n * application will allow anonymous/unauthenticated sessions.\n * @param {*} [options.hydrateAuthenticatedUser=false] If true, makes an API call to the user\n * account endpoint (`${App.config.LMS_BASE_URL}/api/user/v1/accounts/${username}`) to fetch\n * detailed account information for the authenticated user. This data is merged into the return\n * value of `getAuthenticatedUser`, overriding any duplicate keys that already exist. Defaults to\n * false, meaning that no additional account information will be loaded.\n * @param {*} [options.messages] A i18n-compatible messages object, or an array of such objects. If\n * an array is provided, duplicate keys are resolved with the last-one-in winning.\n * @param {*} [options.handlers={}] An optional object of handlers which can be used to replace the\n * default behavior of any part of the startup sequence. It can also be used to add additional\n * initialization behavior before or after the rest of the sequence.\n */\nexport async function initialize({\n  loggingService = NewRelicLoggingService,\n  analyticsService = SegmentAnalyticsService,\n  authService = AxiosJwtAuthService,\n  authMiddleware = [],\n  requireAuthenticatedUser: requireUser = false,\n  hydrateAuthenticatedUser: hydrateUser = false,\n  messages,\n  handlers: overrideHandlers = {},\n}) {\n  const handlers = applyOverrideHandlers(overrideHandlers);\n  try {\n    // Pub/Sub\n    await handlers.pubSub();\n    publish(APP_PUBSUB_INITIALIZED);\n\n    // Configuration\n    if (getConfig().MFE_CONFIG_API_URL) { await runtimeConfig(); } else { await handlers.config(); }\n    publish(APP_CONFIG_INITIALIZED);\n\n    // Logging\n    configureLogging(loggingService, {\n      config: getConfig(),\n    });\n    await handlers.logging();\n    publish(APP_LOGGING_INITIALIZED);\n\n    // Authentication\n    configureAuth(authService, {\n      loggingService: getLoggingService(),\n      config: getConfig(),\n      middleware: authMiddleware,\n    });\n\n    await handlers.auth(requireUser, hydrateUser);\n    publish(APP_AUTH_INITIALIZED);\n\n    // Analytics\n    configureAnalytics(analyticsService, {\n      config: getConfig(),\n      loggingService: getLoggingService(),\n      httpClient: getAuthenticatedHttpClient(),\n    });\n    await handlers.analytics();\n    publish(APP_ANALYTICS_INITIALIZED);\n\n    // Internationalization\n    configureI18n({\n      messages,\n      config: getConfig(),\n      loggingService: getLoggingService(),\n    });\n    await handlers.i18n();\n    publish(APP_I18N_INITIALIZED);\n\n    // Application Ready\n    await handlers.ready();\n    publish(APP_READY);\n  } catch (error) {\n    if (!error.isRedirecting) {\n      // Initialization Error\n      await handlers.initError(error);\n      publish(APP_INIT_ERROR, error);\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,oBAAT,EAA+BC,mBAA/B,QAA0D,SAA1D;AACA,SACEC,OADF,QAEO,UAFP,C,CAGA;;AACA,SACEC,SADF,EACaC,WADb,EAC0BC,SAD1B,QAEO,UAFP;AAGA,SACEC,SAAS,IAAIC,gBADf,EACiCC,iBADjC,EACoDC,sBADpD,EAC4EC,QAD5E,QAEO,WAFP;AAGA,SACEJ,SAAS,IAAIK,kBADf,EACmCC,uBADnC,EAC4DC,qBAD5D,EACmFC,yBADnF,QAEO,aAFP;AAGA,SACEC,0BADF,EAEET,SAAS,IAAIU,aAFf,EAGEC,uBAHF,EAIEC,sBAJF,EAKEC,wBALF,EAMEC,oBANF,EAOEC,mBAPF,QAQO,QARP;AASA,SAASf,SAAS,IAAIgB,aAAtB,QAA2C,QAA3C;AACA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,uBALF,EAMEC,yBANF,EAOEC,SAPF,EAOaC,cAPb,QAQO,aARP;AASA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,mBAAT,QAAoC,SAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAI,OAAOC,MAAP,KAAkB,WAAnB,GACnBlC,oBAAoB,CAAC;EACrBmC,QAAQ,EAAEhC,SAAS,GAAGiC;AADD,CAAD,CADD,GAGhBnC,mBAAmB,EAHnB;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAsBoC,SAAtB;EAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;uEAhBO,kBAAyBC,KAAzB;IAAA;MAAA;QAAA;UAAA;YACL5B,QAA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"}